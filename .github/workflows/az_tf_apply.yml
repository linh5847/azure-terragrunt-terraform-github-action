### Reusable workflow to download terraform artifact built by `az_tf_plan` and apply the artifact/plan ###
name: "Apply_TF_Plan"
on:
  workflow_call:
    inputs:
      path:
        description: "Specifies the path of the root terraform module."
        required: true
        type: string
      tf_version:
        description: "Specifies version of Terraform to use. e.g: 1.1.0 Default=latest."
        required: false
        type: string
        default: latest
      az_resource_group:
        description: "Specifies the Azure Resource Group where the backend storage account is hosted."
        required: true
        type: string
      az_storage_acc:
        description: "Specifies the Azure Storage Account where the backend state is hosted."
        required: true
        type: string
      az_container_name:
        description: "Specifies the Azure Storage account container where backend Terraform state is hosted."
        required: true
        type: string
      tf_key:
        description: "Specifies the Terraform state file name. Workflow artifact will be the same name."
        required: true
        type: string
      gh_environment:
        description: "Specifies the GitHub deployment environment."
        required: false
        type: string
        default: null
    secrets:
      arm_client_id:
        description: "Specifies the Azure ARM CLIENT ID."
        required: true
      arm_client_secret:
        description: "Specifies the Azure ARM CLIENT SECRET."
        required: true
      arm_subscription_id:
        description: "Specifies the Azure ARM SUBSCRIPTION ID."
        required: true
      arm_tenant_id:
        description: "Specifies the Azure ARM TENANT ID."
        required: true

jobs:
  apply-plan:
    runs-on: ubuntu-latest
    environment: ${{ inputs.gh_environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path }}
    env:
      ###AZURE Client details###
      ARM_CLIENT_ID: ${{ secrets.arm_client_id }}
      ARM_CLIENT_SECRET: ${{ secrets.arm_client_secret }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.arm_subscription_id }}
      ARM_TENANT_ID: ${{ secrets.arm_tenant_id }}

    steps:
      - name: "Checkout"
        uses: actions/checkout@master

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
          terraform_wrapper: false

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.1.0
        with:
          terragrunt_version: 0.78.4
      - name: "Terragrunt Apply"
        run: terragrunt run-all apply --terragrunt-non-interactive
        working-directory: ${{ inputs.path }}
